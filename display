import numpy as np
import cv2
import time
import skimage.io as io
io.use_plugin('freeimage')
import matplotlib.pyplot as plt
import matplotlib.animation as animation
import SimpleITK as sitk

#ps aux | grep python  #### KILL python process

cap = cv2.VideoCapture(cv2.CAP_XIAPI)

############################### Activate the following to enable external trigger
###cap.set(cv2.CAP_PROP_XI_TRG_SOURCE,1)
###cap.set(cv2.CAP_PROP_XI_GPI_SELECTOR,1)
###cap.set(cv2.CAP_PROP_XI_GPI_MODE,1)
###############################

cap.set(cv2.CAP_PROP_XI_AEAG,0)#auto gain auto exposure
cap.set(cv2.CAP_PROP_XI_DATA_FORMAT,0) #0=8 bits, 1=16(10)bits, 5=8bits RAW, 6=16(10)bits RAW  
cap.set(cv2.CAP_PROP_FRAME_HEIGHT,2048); # reducing this one allows one to increase the FPS
cap.set(cv2.CAP_PROP_FRAME_WIDTH,2048);  # doesn't work for this one
#cap.set(cv2.CAP_PROP_XI_DOWNSAMPLING,0)
#print cap.get(cv2.CAP_PROP_FRAME_WIDTH)
#print cap.get(cv2.CAP_PROP_FRAME_HEIGHT); 


cap.set(cv2.CAP_PROP_EXPOSURE,500)
cap.set(cv2.CAP_PROP_GAIN,2)
ret, frame = cap.read()

rat = 0.7
fig=plt.figure(figsize=(7, 6))
axim = fig.add_axes([0.1, 0.1, rat, rat*7/6.])
cax = fig.add_axes([0.11+rat, 0.1, 0.02, rat*7/6.])
axc = fig.add_axes([0.11+rat, 0.1, 0.07, rat*7/6.])
im = axim.imshow(frame,cmap=plt.cm.gray)
cb = fig.colorbar(im, cax=cax)
cax.axis('off')
axc.axis('off')


def get_frame(i):
  ret, frame = cap.read()
  if i == 1:
    cax.axis('on')
  im.set_data(frame)
  im.set_clim([frame.min(), frame.max()])
  return cax, axim , axc


ani = animation.FuncAnimation(fig, get_frame, interval=20, frames=20, blit=False)
plt.show()
    
    
    
  #except KeyboardInterrupt:
    #break
    #plt.close()
    #cap.release()
  

  
### This part is used to save a sample of image.
#frame={}
#i=0
#std_=3.0
#t0=time.time()
#while(i<2000):
  ####ret, frame[i] = cap.read()
  #ret, frame = cap.read()
  #image=sitk.GetImageFromArray(frame)
  #sitk.WriteImage(image,"/home/corentin/Bureau/ximea/"+"img_.tiff") ### works fast in 8 or 16 bit, always use sitk.
  ##sitk.WriteImage(image,"/dev/shm/"+"img_.tiff") ### works fast in 8 or 16 bit, always use sitk.
  #i+=1
#t=time.time()-t0

#print "t=%s" %t
